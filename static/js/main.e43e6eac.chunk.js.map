{"version":3,"sources":["components/score.js","App.js","index.js"],"names":["Score","props","className","current","best","App","selected","useState","currentScore","setCurrentScore","bestScore","setBestScore","cardData","setCardData","clicked","setClicked","cardClick","e","indexOf","target","id","useEffect","fetch","mode","then","results","json","data","range","choices","length","pick","parseInt","Math","random","push","map","choice","onClick","src","image_uris","normal","alt","name","pickCard","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6OAWeA,G,MATD,SAACC,GACb,OACE,sBAAKC,UAAU,aAAf,UACE,gDAAmBD,EAAME,WACzB,gDAAmBF,EAAMG,aC2DhBC,MA7Df,WAAe,IAcTC,EAdQ,EAC4BC,mBAAS,GADrC,mBACLC,EADK,KACSC,EADT,OAEsBF,mBAAS,GAF/B,mBAELG,EAFK,KAEMC,EAFN,OAGoBJ,mBAAS,MAH7B,mBAGLK,EAHK,KAGKC,EAHL,OAIkBN,mBAAS,IAJ3B,mBAILO,EAJK,KAIIC,EAJJ,KAmCZ,SAASC,EAAUC,GACdH,EAAQI,QAAQD,EAAEE,OAAOC,IAAI,GAC9BL,GAAW,SAAAD,GAAO,4BAAQA,GAAR,CAAiBG,EAAEE,OAAOC,QAC5CX,EAAgBD,EAAc,KAG3BA,EAAaE,GACdC,EAAaH,GAEfC,EAAgB,GAChBM,GAAW,SAAAD,GAAO,MAAI,OAI1B,OA3CAO,qBAAU,WACNC,MAAM,mDAAoD,CAACC,KAAM,SAChEC,MAAK,SAAAC,GAAO,OAAIA,EAAQC,UACxBF,MAAK,SAAAG,GACJd,EAAYc,QAEf,IAGH,SAAkBC,GAEhB,IADA,IAAIC,EAAQ,GACNA,EAAQC,OAAO,GAAE,CACrB,IAAIC,EAAOC,SAASC,KAAKC,SAASN,GAC/BC,EAAQX,QAAQa,GAAM,GACvBF,EAAQM,KAAKJ,GAGjBzB,EAAWuB,EAAQO,KAAI,SAAAC,GACrB,OACE,qBAAKnC,UAAU,WAAf,SACG,qBAAKoC,QAAStB,EAAWI,GAAIiB,EAAQE,IAAM3B,EAAD,UAA8BA,EAASe,KAAKU,GAAQG,WAAWC,QAAnD,aAA6DC,IAAM9B,EAAD,UAA8BA,EAASe,KAAKU,GAAQM,MAAxC,gBADxGN,MAQrCO,CAAS,IAiBP,sBAAK1C,UAAU,MAAf,UACE,6CACA,gGACA,cAAC,EAAD,CAAOC,QAASK,EAAcJ,KAAMM,IACpC,qBAAKR,UAAU,MAAf,SACCI,QCtDPuC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.e43e6eac.chunk.js","sourcesContent":["\n\nconst Score = (props) => {\n  return(\n    <div className='scoreBoard'>\n      <p>Current Score: {props.current}</p>\n      <p>Highest Score: {props.best}</p>\n    </div>\n  )\n}\n\nexport default Score","import './App.css';\nimport { useState, useEffect } from \"react\";\nimport Score from './components/score';\n\nfunction App(){\n  const [currentScore, setCurrentScore] = useState(0);\n  const [bestScore, setBestScore] = useState(0);\n  const [cardData, setCardData] = useState(null);\n  const [clicked, setClicked] = useState([])\n\n  useEffect(() => {\n      fetch('https://api.scryfall.com/cards/search?q=cmc%3D10', {mode: 'cors'})\n      .then(results => results.json())\n      .then(data => {\n        setCardData(data);\n      })\n  }, []);\n\n  let selected\n  function pickCard(range){\n    let choices=[];\n    while(choices.length<3){\n      let pick = parseInt(Math.random()*range)\n      if(choices.indexOf(pick)<0){\n        choices.push(pick);\n      }\n    }\n    selected = choices.map(choice => {   \n      return (\n        <div className=\"col-sm-4\" key={choice}>\n           <img onClick={cardClick} id={choice} src={!cardData ? 'Loading...' : `${cardData.data[choice].image_uris.normal}`} alt={!cardData ? 'Loading...' : `${cardData.data[choice].name}`}/>\n          {/* <Card data={!cardData ? 'Loading...' :cardData.data[choice]} /> */}\n        </div>\n      )\n    })\n  }\n\n  pickCard(35)\n\n  function cardClick(e){\n    if(clicked.indexOf(e.target.id)<0){\n      setClicked(clicked => [...clicked, e.target.id]);\n      setCurrentScore(currentScore +1)\n    }\n    else {\n      if(currentScore>bestScore){\n        setBestScore(currentScore);\n      }\n      setCurrentScore(0)\n      setClicked(clicked => [])\n    }\n  }\n\n  return (\n    <div className=\"App\">\n      <h1>Memory Game</h1>\n      <p>Click a unique card each time. How many can you click in a row?</p>\n      <Score current={currentScore} best={bestScore} />\n      <div className=\"row\">\n      {selected}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}